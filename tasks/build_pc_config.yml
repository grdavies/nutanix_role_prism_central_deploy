---
- name: Get container UUID
  block:
    - name: Set nutanix_container_found_uuid=None
      set_fact:
        nutanix_container_found_uuid: "None"

    - name: Search for container "{{ nutanix_pc_deploy_container_name }}" and get its UUID
      ansible.builtin.import_role:
        name: grdavies.nutanix_role_prism_container_search
      vars:
        nutanix_container_search_name: "{{ nutanix_pc_deploy_container_name }}"

    - name: Container not found
      ansible.builtin.fail:
        msg: "the container '{{ nutanix_pc_deploy_container_name }}' was not found. Please check the input variable nutanix_pc_deploy_container_name or that the container is present on this Nutanix cluster"
      when:
        - nutanix_container_found_uuid is not defined or nutanix_container_found_uuid == "None"

- name: Find uuid for network "{{ nutanix_pc_deploy_subnet_name }}"
  block:
    - name: Get subnets from nutanix.ncp collection
      nutanix.ncp.ntnx_subnets_info:
        nutanix_host: "{{ nutanix_host }}"
        nutanix_username: "{{ nutanix_username }}"
        nutanix_password: "{{ nutanix_password }}"
        validate_certs: "{{ validate_certs }}"
      register: nutanix_current_subnets

    - name: search subnets list for subnet name and return its uuid
      set_fact:
        nutanix_pc_deploy_network_uuid: "{{ item.metadata.uuid }}"
      when: item.status.name == nutanix_pc_deploy_subnet_name
      with_items: "{{ nutanix_current_subnets.response.entities }}"

- name: Debug
  block:
    - name: Debug nutanix_current_subnets.response
      debug:
        var: nutanix_current_subnets.response

    - name: Debug nutanix_pc_deploy_network_uuid
      debug:
        var: nutanix_pc_deploy_network_uuid
  when:
    - nutanix_debug

- ansible.builtin.fail:
    msg: "the subnet '{{ nutanix_pc_deploy_subnet_name }}' was not found. Please check the input variable nutanix_pc_deploy_subnet_name or that the subnet is present on this Nutanix cluster"
  when:
    - nutanix_pc_deploy_network_uuid is not defined

- name: Get latest prism central version available for this AOS version if variable 'nutanix_pc_deploy_version' not provided
  block:
    - name: Get available PC versions
      uri:
        url: "https://{{ nutanix_host }}:{{ nutanix_port }}/PrismGateway/services/rest/v1/upgrade/prism_central_deploy/softwares"
        method: GET
        validate_certs: "{{ validate_certs }}"
        body_format: json
        headers:
          Authorization: "{{ nutanix_api_auth }}"
        status_code: 200
        return_content: yes
      register: nutanix_pc_deploy_versions
      ignore_errors: False

    - name: Get latest PC for this clusters AOS release
      set_fact:
        nutanix_pc_deploy_rdates: "{{ nutanix_pc_deploy_versions.json | json_query('entities[*].releaseDate') | max }}"

    - name: Get latest PC version name for this clusters AOS release
      set_fact:
        nutanix_pc_deploy_version: '{{ nutanix_pc_deploy_versions.json | json_query(query) | join("") }}'
      vars:
        query: "entities[?releaseDate==`{{ nutanix_pc_deploy_rdates }}`].version"

  when: nutanix_pc_deploy_version is not defined

- name: Set default variables for PC size selected
  set_fact:
    nutanix_pc_deploy_num_sockets: "{{ nutanix_central_size_defaults | json_query(query) | first | json_query('nutanix_pc_deploy_num_sockets') }}"
    nutanix_pc_deploy_data_disk_size: "{{ nutanix_central_size_defaults | json_query(query) | first | json_query('nutanix_pc_deploy_data_disk_size') }}"
    nutanix_pc_deploy_memory_size: "{{ nutanix_central_size_defaults | json_query(query) | first | json_query('nutanix_pc_deploy_memory_size') }}"
  vars:
    query: "[?size==`{{ nutanix_pc_deploy_size }}`]"
  when:
    - nutanix_ha_failover_enabled is undefined

- name: Debug
  block:
    - name: Debug nutanix_pc_deploy_version
      debug:
        var: nutanix_pc_deploy_version

    - name: Debug nutanix_pc_deploy_num_sockets
      debug:
        var: nutanix_pc_deploy_num_sockets

    - name: Debug nutanix_pc_deploy_data_disk_size
      debug:
        var: nutanix_pc_deploy_data_disk_size

    - name: Debug nutanix_pc_deploy_memory_size
      debug:
        var: nutanix_pc_deploy_memory_size
  when:
    - nutanix_debug
